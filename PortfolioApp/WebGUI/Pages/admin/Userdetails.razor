@page "/admin/{email}"
@attribute [Authorize(Roles = "Admin")]
@using PortfolioApp.Enities
@using WebGUI.Services
@using Domain.interfaces
@inject IAdminService AdminService
@inject DashboardService DashboardService
@inject TargetAllocationService AllocationService
@inject IWalletService WalletService
@inject NavigationManager Nav

@code {
    [Parameter] public string email { get; set; }

    private List<Wallet> wallets = new();
    private List<TargetAllocation> targetAllocations = new();
    private decimal totalValue;

    protected override async Task OnInitializedAsync()
    {
        wallets = await WalletService.GetWalletsForUserAsync(email);
        targetAllocations = AllocationService.GetAllocations(email);
        totalValue = DashboardService.GetTotalPortfolioValue(email);
    }
}

<div class="container py-5 text-white">
    <div class="text-center mb-4">
        <h2 class="text-info">Admin Detail Page</h2>
        <p class="text-light">User: <strong>@email</strong></p>
        <h4 class="text-success">Net Worth: @totalValue.ToString("C")</h4>
    </div>

    <div class="accordion" id="walletAccordion">
        @for (int i = 0; i < wallets.Count; i++)
        {
            var wallet = wallets[i];
            var collapseId = $"collapse{i}";
            var headingId = $"heading{i}";
            <div class="accordion-item bg-dark text-white border border-secondary mb-2">
                <h2 class="accordion-header" id="@headingId">
                    <button class="accordion-button bg-secondary text-white collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                        @wallet.Network Wallet: @wallet.Address (Updated: @wallet.LastUpdated.ToString("g")) - Value: @wallet.UsdValue.ToString("C")
                    </button>
                </h2>
                <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#walletAccordion">
                    <div class="accordion-body">
                        <table class="table table-dark table-sm">
                            <thead>
                                <tr>
                                    <th>Symbol</th>
                                    <th>Name</th>
                                    <th>Amount</th>
                                    <th>USD Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var holding in WalletService.GetHoldingsForWallet(wallet.Address, wallet.Email).OrderByDescending(h => h.UsdValue))
                                {
                                    <tr>
                                        <td>@holding.Symbol</td>
                                        <td>@holding.TokenName</td>
                                        <td>@holding.Amount</td>
                                        <td>@holding.UsdValue.ToString("C")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (targetAllocations.Any())
    {
        <h4 class="mt-4">🎯 Target Allocations</h4>
        <table class="table table-dark table-bordered table-sm text-white">
            <thead class="bg-secondary">
                <tr>
                    <th>Symbol</th>
                    <th>Address</th>
                    <th>Current %</th>
                    <th>Target %</th>
                    <th>Tolerance %</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ta in targetAllocations)
                {
                    <tr>
                        <td>@ta.Symbol</td>
                        <td>@ta.Address</td>
                        <td>@ta.CurrentAllocationPercent.ToString("F2")%</td>
                        <td>@ta.TargetPercent.ToString("F2")%</td>
                        <td>@ta.TolerancePercent.ToString("F2")%</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
