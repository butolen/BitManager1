@page "/user/login"
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor
@inject IUserService UserService
@inject AuthenticationStateProvider AuthenticationStateProvider

@using Microsoft.AspNetCore.Components.Authorization
@using System.ComponentModel.DataAnnotations
@using WebGUI.Services

<div class="vh-100 vw-100 d-flex justify-content-center align-items-center btn-dark" style="margin: auto">
    <div class="card shadow-lg p-4" style="width: 100%; max-width: 400px; margin:auto ">
        <h3 class="text-center mb-3">Login</h3>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger">@ErrorMessage</div>
        }

        <EditForm Model="model" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <InputText id="email" class="form-control" @bind-Value="model.Email" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <InputText id="password" class="form-control" type="password" @bind-Value="model.Password" />
            </div>

            <button type="submit" class="btn btn-primary w-100 mb-2">Login</button>

            <div class="text-center mt-3">
                <a class="d-block mb-2" href="/user/forgot-password">Forgot password?</a>
                <span>Don't have an account? <a href="/user/register">Register</a></span>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel model = new();
    private string ErrorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            Navigation.NavigateTo("/");
            return;
        }

        // ✅ Fehlerparameter aus URL lesen
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        if (query["error"] == "1")
        {
            ErrorMessage = "E-Mail or password is Incorrekt";
        }
    }

    private async Task HandleLogin()
    {
        // 🔁 Weiterleitung bleibt erhalten
        Navigation.NavigateTo($"/user/login/callback?email={Uri.EscapeDataString(model.Email)}&password={Uri.EscapeDataString(model.Password)}", true);
    }

    public class LoginModel
    {
        [Required, EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        public string Password { get; set; } = "";
    }
}