@page "/"
@attribute [Authorize]
@using WebGUI.Services
@using PortfolioApp.Enities
@inject DashboardService DashboardService
@inject TargetAllocationService TargetAllocationService
@inject AuthenticationStateProvider AuthProvider
<style>
    body, h1, h2, h3, h4, h5, h6, p, label, span, div, input, select, option, button {
        color: #f5f5f5 !important;
    }

    .text-muted {
        color: #bbbbbb !important;
    }
</style>
@code {
    private string? userEmail;
    private decimal totalValue;
    private List<CoinSummary> coinSummaries = new();
    private List<TargetAllocation> allocations = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userEmail = user.Identity.Name;

            totalValue = DashboardService.GetTotalPortfolioValue(userEmail);
            coinSummaries = DashboardService.GetAggregatedCoinHoldingsForUser(userEmail);
            allocations = TargetAllocationService.GetAllocations(userEmail);
        }
    }
}

<h1 class="text-center text-light my-4">Your Total Portfolio Value</h1>
<h2 class="text-center text-info mb-5">$@totalValue.ToString("F2")</h2>

<div class="container">
    <div class="row g-3">
        @foreach (var coin in coinSummaries)
        {
            <div class="col-12 col-md-6 col-lg-4">
                <div class="card bg-dark text-light shadow-sm h-100">
                    <div class="card-body d-flex align-items-center gap-3">
                        <img src="@coin.ImageUrl" alt="@coin.Symbol" style="width:48px; height:48px; object-fit:contain;" />
                        <div>
                            <h5 class="card-title mb-1">@coin.Symbol</h5>
                            <p class="card-text">$@coin.TotalUsdValue.ToString("F2")</p>
                            <p class="card-text small text-white">Current: @coin.CurrentAllocationPercent.ToString("F2")%</p>
                            @{
                                var alloc = allocations.FirstOrDefault(a => a.Symbol == coin.Symbol);
                                if (alloc != null)
                                {
                                    <p class="card-text small text-white">
                                        Target: @alloc.TargetPercent.ToString("F2")% ± @alloc.TolerancePercent.ToString("F2")%
                                    </p>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>